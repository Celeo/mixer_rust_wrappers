use constellation_rs::{init_connection, models::StreamMessage};
use log::info;
use std::{collections::HashMap, sync::mpsc::Receiver, thread};

fn message_handler(receiver: Receiver<StreamMessage>) {
    loop {
        if let Ok(message) = receiver.try_recv() {
            info!("Got message: {}", message);
            if let Some(event) = message.event {
                // ...
            }
            if let Some(reply) = message.reply {
                // ...
            }
        }
    }
}

fn main() {
    kankyo::load(false).expect("Could not load .env file");
    log4rs::init_file("log4rs.yml", Default::default()).unwrap();
    info!("Setting up");
    let (mut client, receiver) = init_connection().expect("Could not start client");
    thread::spawn(move || {
        message_handler(receiver);
    });
    client.call_method("ping", &HashMap::new()).unwrap();
    client.call_method("ping", &HashMap::new()).unwrap();
    client.client_thread_handler.join().unwrap();
}
